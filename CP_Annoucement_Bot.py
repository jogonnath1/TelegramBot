import logging
from telegram import Update
from telegram.ext import Application, MessageHandler, CommandHandler, filters, CallbackContext

# ЁЯФ╣ рждрзЛржорж╛рж░ ржЯрзЗрж▓рж┐ржЧрзНрж░рж╛ржо ржмржЯрзЗрж░ API ржЯрзЛржХрзЗржи ржПржЦрж╛ржирзЗ ржмрж╕рж╛ржУ
TOKEN = "7958714981:AAGtL6gMzrvevBK2S8osBAcPVW-GqdWTNxs"

# ЁЯФ╣ ржЧрзНрж░рзБржкрзЗрж░ ID (ржПржЦрж╛ржирзЗ ржЯржкрж┐ржХ ID ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЛ ржирж╛, рж╢рзБржзрзБ ржЧрзНрж░рзБржк ID)
GROUP_ID = -1002483552499

# ЁЯФ╣ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╕рж╛ржм-ржЯржкрж┐ржХ (Thread) ID рж▓рж┐рж╕рзНржЯ
TOPIC_IDS = {
    501: "ЁЯТ╗ Task Annoucement",  # тЬЕ ржерзНрж░рзЗржб рзлрзжрзз ржПрж░ ржЬржирзНржп ржмрж╛ржВрж▓рж╛ рж╢рж┐рж░рзЛржирж╛ржо
    694: "ЁЯУв Important Annoucement",  # тЬЕ ржерзНрж░рзЗржб рзмрзпрзк ржПрж░ ржЬржирзНржп ржмрж╛ржВрж▓рж╛ рж╢рж┐рж░рзЛржирж╛ржо
}

# ЁЯФ╣ рж▓ржЧрж┐ржВ рж╕рзЗржЯржЖржк (ржмрж╛ржЧ ржлрж┐ржХрзНрж╕рзЗрж░ ржЬржирзНржп)
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)

# ЁЯФ╣ ржЧрзНрж░рзБржк ржорзЗржорзНржмрж╛рж░ржжрзЗрж░ ID рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рждрзЗ ржПржХржЯрж┐ рж╕рзЗржЯ
group_members = set()

async def forward_message(update: Update, context: CallbackContext) -> None:
    """ржпржЦржи ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржерзНрж░рзЗржбрзЗ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржирзЛ рж╣ржмрзЗ, рждржЦржи рж╕рзЗржЯрж╛ ржмрзНржпржХрзНрждрж┐ржЧрждржнрж╛ржмрзЗ ржлрж░рзЛрзЯрж╛рж░рзНржб рж╣ржмрзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╢рж┐рж░рзЛржирж╛ржо рж╕рж╣"""
    message = update.message
    if message and message.is_topic_message:  # тЬЕ рж╢рзБржзрзБржорж╛рждрзНрж░ рж╕рж╛ржм-ржЯржкрж┐ржХрзЗрж░ ржорзЗрж╕рзЗржЬ ржирж┐ржмрзЗ
        topic_id = message.message_thread_id
        if topic_id in TOPIC_IDS:
            topic_title = TOPIC_IDS[topic_id]  # тЬЕ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржерзНрж░рзЗржбрзЗрж░ ржмрж╛ржВрж▓рж╛ рж╢рж┐рж░рзЛржирж╛ржо
            text = f"**{topic_title} ржерзЗржХрзЗ ржирждрзБржи ржмрж╛рж░рзНрждрж╛:**\n\n{message.text}"

            # тЬЕ рж╢рзБржзрзБржорж╛рждрзНрж░ ржмрзНржпржХрзНрждрж┐ржЧржд ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржмрзЗ (ржЧрзНрж░рзБржкрзЗ ржЖрж░ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржмрзЗ ржирж╛)
            for user_id in group_members:
                try:
                    await context.bot.send_message(chat_id=user_id, text=text, parse_mode="Markdown")
                except Exception as e:
                    logging.warning(f"тЭМ {user_id} ржХрзЗ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржирзЛ ржпрж╛рзЯржирж┐: {e}")

async def start(update: Update, context: CallbackContext) -> None:
    """ржпржЦржи ржХрзЗржЙ /start ржХржорж╛ржирзНржб ржкрж╛ржарж╛ржмрзЗ, рждржЦржи рждрж╛ржжрзЗрж░ ржЖржЗржбрж┐ ржЧрзНрж░рзБржк ржорзЗржорзНржмрж╛рж░ рж▓рж┐рж╕рзНржЯрзЗ ржпрзЛржЧ ржХрж░рж╛ рж╣ржмрзЗ"""
    user = update.message.from_user
    group_members.add(user.id)
    await update.message.reply_text("ЁЯдЦ рждрзБржорж┐ ржПржЦржи рж╕рж╛ржмрж╕рзНржХрзНрж░рж╛ржЗржм ржХрж░рзЗржЫрзЛ! ЁЯУв рж╕ржХрж▓ Annoucement ржорзЗрж╕рзЗржЬ ржкрж╛ржмрзЗред")

def main():
    """ржмржЯ ржЪрж╛рж▓рзБ ржХрж░рж╛рж░ ржЬржирзНржп ржорзЗржЗржи ржлрж╛ржВрж╢ржи"""
    app = Application.builder().token(TOKEN).build()

    # тЬЕ /start ржХржорж╛ржирзНржб рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░ (ржкрзНрж░рждрж┐ржЯрж┐ ржорзЗржорзНржмрж╛рж░рзЗрж░ ржЖржЗржбрж┐ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░ржмрзЗ)
    app.add_handler(CommandHandler("start", start))

    # тЬЕ ржорзЗрж╕рзЗржЬ ржлрж░рзЛрзЯрж╛рж░рзНржбрж╛рж░ рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░ (рж╢рзБржзрзБржорж╛рждрзНрж░ рж╕рж╛ржм-ржЯржкрж┐ржХрзЗрж░ ржорзЗрж╕рзЗржЬ ржирж┐ржмрзЗ)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, forward_message))

    # тЬЕ ржмржЯ ржЪрж╛рж▓рзБ ржХрж░рж╛
    app.run_polling()

if __name__ == "__main__":
    main()
